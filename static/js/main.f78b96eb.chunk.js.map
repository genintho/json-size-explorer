{"version":3,"sources":["Explorer.module.css","Form.tsx","DomUtils.ts","ResultSummary.tsx","ResultTableCount.tsx","HoverStats.tsx","Explorer.tsx","ResultsRoot.tsx","JsonSizeExplorer/stats.ts","JsonSizeExplorer/main.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","globalContainer","listContainer","list","item","value","arr","bool","null","num","obj","str","Form","_React$Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","handleTextAreaChange","bind","assertThisInitialized","onSubmit","inherits","createClass","key","ev","length","event","target","setState","react_default","a","createElement","className","id","style","position","left","top","width","cols","rows","onChange","onClick","React","Component","limitLen","input","maxLength","arguments","undefined","substr","numFormator","Intl","NumberFormat","navigator","language","thousands","format","ResultSummary","stats","jsonStats","totalLength","nbOfKey","keys","keySize","perc","ResultTableCount","MostFrequentKeys","HeaviestKeys","MostFrequentValues","HeaviestValues","MostFrequentKVDuplicates","HeaviestKVDuplicates","KeyTable","title","description","dataProvider","keySortedByCount","processor","k","size","keySortedBySize","valuesSortedByCount","values","valuesSortedBySize","freqDupsValue","keyValue","replace","biggestDupsValue","Fragment","role","slice","map","buildRow","rowIdx","idx","HoverStats","apply","_this$props","objKey","nbKey","sizeKey","distinctValues","distinctValue","valueSize","reduce","acu","current","count","Explorer","hoverObjKey","expendedKeys","toggleCollapsedKey","hoverOn","keyName","path","copyExpendedKeys","_","Explorer_List","jsonObj","HoverStats_HoverStats","List","_this2","sort","pathValue","Explorer_ListItem","concat","valueFromArray","isOpen","ListItem","_this3","onHoverIn","JSON","stringify","defineProperty","canOpen","sizePercentage","keyLabel","color","heatMapColorforValue","onMouseEnter","Value","String","ResultsRoot","Explorer_Explorer","Stats","rawLength","jsonValue","kv","push","ks","b","aL","bL","_this4","_this5","ac","_this6","nb","Math","floor","_this7","filter","el","_this8","_this9","distinct","main","raw","stat","_main","forEach","addKeyValue","parse","App","propS","JSONSizeExplorer","rawJsonString","Form_Form","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f78b96eb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"globalContainer\":\"Explorer_globalContainer__348SC\",\"listContainer\":\"Explorer_listContainer__c3eda\",\"list\":\"Explorer_list__3EwY9\",\"item\":\"Explorer_item__1rKGM\",\"value\":\"Explorer_value__1rm8i\",\"arr\":\"Explorer_arr__1jwzo\",\"bool\":\"Explorer_bool__1jC1P\",\"null\":\"Explorer_null__3W-8r\",\"num\":\"Explorer_num__1UXVw\",\"obj\":\"Explorer_obj__Nsol-\",\"str\":\"Explorer_str__35gEu\"};","import React from \"react\";\n\ninterface iProps {\n    onSubmit: (data: string) => void;\n}\n\ninterface iState {\n    value: string;\n}\nexport class Form extends React.Component<iProps, iState> {\n    constructor(props: iProps) {\n        super(props);\n        this.state = { value: \"\" };\n        this.handleTextAreaChange = this.handleTextAreaChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    onSubmit(ev: React.MouseEvent) {\n        if (this.state.value.length === 0) {\n            return;\n        }\n        this.props.onSubmit(this.state.value);\n    }\n\n    handleTextAreaChange(event: React.ChangeEvent) {\n        // @ts-ignore\n        const value = event.target.value ? event.target.value : \"\";\n        this.setState({ value });\n    }\n\n    render() {\n        return (\n            <div className=\"flex-row\" id=\"intro\">\n                <div\n                    className=\"card\"\n                    style={{\n                        position: \"absolute\",\n                        left: \"20%\",\n                        top: \"30%\",\n                        width: \"600px\",\n                    }}\n                >\n                    <div className=\"card-body\">\n                        <h5 className=\"card-title\">JSON Size Explorer</h5>\n                        <p>Understand the structure of your JSON files.</p>\n\n                        <div>\n                            <h6 className=\"card-subtitle mb-2 text-muted\">\n                                Paste\n                            </h6>\n                            <textarea\n                                id=\"area\"\n                                cols={60}\n                                rows={10}\n                                value={this.state.value}\n                                onChange={this.handleTextAreaChange}\n                            />\n                            <br />\n                            <button\n                                id=\"sub\"\n                                className=\"btn btn-info btn-sm\"\n                                onClick={this.onSubmit}\n                            >\n                                Submit\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","export function elId(id: string) {\n    const elem = document.getElementById(id);\n    if (elem === null) {\n        throw new Error(`Can not select element '${id}'`);\n    }\n    return elem;\n}\n\nexport function limitLen(input: string, maxLength = 50) {\n    return input.length > maxLength\n        ? input.substr(0, maxLength) + \"...\"\n        : input;\n}\n\nconst numFormator = new Intl.NumberFormat(navigator.language);\nexport function thousands(input: number) {\n    return numFormator.format(input);\n}\n","import React from \"react\";\nimport { thousands } from \"./DomUtils\";\nimport { Stats } from \"./JsonSizeExplorer/stats\";\n\ninterface iProps {\n    jsonStats: Stats;\n}\n\nexport function ResultSummary(props: iProps) {\n    const stats = props.jsonStats;\n    return (\n        <div className=\"flex-row\">\n          <h1>Summary</h1>\n            <ul>\n                <li>Total document size: {thousands(stats.totalLength)}</li>\n                <li>Number of keys: {thousands(stats.nbOfKey())}</li>\n                <li>\n                    Number of unique keys:{\" \"}\n                    {thousands(Object.keys(stats.keys).length)}\n                </li>\n                <li>\n                    Key size: {thousands(stats.keySize())} -{\" \"}\n                    {stats.perc(stats.keySize())}%\n                </li>\n            </ul>\n        </div>\n    );\n}\n","import React from \"react\";\nimport { thousands, limitLen } from \"./DomUtils\";\nimport { Stats } from \"./JsonSizeExplorer/stats\";\n\ninterface iProps {\n    jsonStats: Stats;\n}\n\ntype tProcessor = (k: string) => (string | number)[];\n\nexport function ResultTableCount(props: iProps) {\n    return (\n        <div className=\"flex-row\">\n            <div>\n                <h2>Keys</h2>\n                <MostFrequentKeys jsonStats={props.jsonStats} />\n                <HeaviestKeys jsonStats={props.jsonStats}/>\n            </div>\n            <div>\n                <h2>Values</h2>\n              <MostFrequentValues jsonStats={props.jsonStats} />\n              <HeaviestValues jsonStats={props.jsonStats} />\n            </div>\n          <div>\n            <div>\n            <h2>Duplicates</h2>\n              <MostFrequentKVDuplicates jsonStats={props.jsonStats} />\n              <HeaviestKVDuplicates jsonStats={props.jsonStats} />\n            </div>\n          </div>\n        </div>\n    );\n}\n\nfunction MostFrequentKeys(props: iProps) {\n    const stats = props.jsonStats;\n    function processor(k: string) {\n        const size = k.length * stats.keys[k];\n        return [\n            limitLen(k),\n            thousands(stats.keys[k]),\n            thousands(size),\n            stats.perc(size),\n        ];\n    }\n    return (\n        <KeyTable\n            title=\"Most Frequently used keys\"\n            description=\"List all the keys found in the JSON and order them by how many times they were found.\"\n            dataProvider={stats.keySortedByCount.bind(stats)}\n            processor={processor}\n        />\n    );\n}\n\nfunction HeaviestKeys(props: iProps) {\n    const stats = props.jsonStats;\n    function processor(k: string) {\n        const size = k.length * stats.keys[k];\n        return [k, thousands(stats.keys[k]), thousands(size), stats.perc(size)];\n    }\n    return (\n        <KeyTable\n            title=\"Heaviest keys\"\n            description=\"List all the keys found in the JSON and order them by how many characters are needed to store them.\"\n            dataProvider={stats.keySortedBySize.bind(stats)}\n            processor={processor}\n        />\n    );\n}\n\nfunction MostFrequentValues(props: iProps) {\n    const stats = props.jsonStats;\n    function processor(k: string) {\n        const size = stats.values[k].length * k.length;\n        return [\n            limitLen(k),\n            thousands(stats.values[k].length),\n            thousands(size),\n            stats.perc(size) + \"%\",\n        ];\n    }\n    return (\n        <KeyTable\n            title=\"Most Frequent Values\"\n            description=\"List all the values found in the JSON and order them by how many we saw them.\"\n            dataProvider={stats.valuesSortedByCount.bind(stats)}\n            processor={processor}\n        />\n    );\n}\n\nfunction HeaviestValues(props: iProps) {\n  const stats = props.jsonStats;\n  function processor(k: string) {\n    const size = stats.values[k].length * k.length;\n    return [\n      limitLen(k),\n      thousands(stats.values[k].length),\n      thousands(size),\n      stats.perc(size) + \"%\",\n    ];\n  }\n  return (\n    <KeyTable\n      title=\"Heaviest Values\"\n      description=\"List all the values found in the JSON and order them by how many characters are needed to store them.\"\n      dataProvider={stats.valuesSortedBySize.bind(stats)}\n      processor={processor}\n    />\n  );\n}\n\nfunction MostFrequentKVDuplicates(props: iProps) {\n  const stats = props.jsonStats;\n  function processor(k: string) {\n    const size = stats.keyValue[k] * (k.length - 3);\n    return [\n      limitLen(k.replace(\"@#@\", \" = \")),\n      thousands(stats.keyValue[k]),\n      thousands(size),\n      stats.perc(size) + \"%\",\n    ];\n  }\n  return (\n    <KeyTable\n      title=\"Most Frequent Duplicates\"\n      description=\"List all the tuples Key/Value found in the JSON and order them by how often we saw them.\"\n      dataProvider={stats.freqDupsValue.bind(stats)}\n      processor={processor}\n    />\n  );\n}\n\n\nfunction HeaviestKVDuplicates(props: iProps) {\n  const stats = props.jsonStats;\n  function processor(k: string) {\n    const size = stats.keyValue[k] * (k.length - 3);\n    return [\n      limitLen(k.replace(\"@#@\", \" = \")),\n      thousands(stats.keyValue[k]),\n      thousands(size),\n      stats.perc(size) + \"%\",\n    ];\n  }\n  return (\n    <KeyTable\n      title=\"Heaviest Duplicates\"\n      description=\"List all the tuples Key/Value ordered by how many characters are used to store them.\"\n      dataProvider={stats.biggestDupsValue.bind(stats)}\n      processor={processor}\n    />\n  );\n}\n\nfunction KeyTable(props: {\n    title: string;\n    description: string;\n    dataProvider: () => string[];\n    processor: tProcessor;\n}) {\n    return (\n        <>\n            <h3>{props.title}</h3>;\n            <div className=\"alert alert-secondary\" role=\"alert\">\n                {props.description}\n            </div>\n            <table className=\"table table-striped table-sm\">\n                <thead>\n                    <tr>\n                        <th>Key Name</th>\n                        <th>Count</th>\n                        <th>Total Size</th>\n                        <th>%</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {drawTableBody(props.dataProvider, props.processor)}\n                </tbody>\n            </table>\n        </>\n    );\n}\n\nfunction drawTableBody(dataProvider: () => string[], processor: tProcessor) {\n    return dataProvider()\n        .slice(-5)\n        .map(processor)\n        .map(buildRow);\n}\n\nfunction buildRow(arr: (string | number)[], rowIdx: number) {\n    return (\n        <tr key={rowIdx}>\n            {arr.map((item, idx) => {\n                return <td key={rowIdx + \"-\" + idx}>{item}</td>;\n            })}\n        </tr>\n    );\n}\n","import React from \"react\";\nimport { Stats } from \"./JsonSizeExplorer/stats\";\nimport { limitLen, thousands } from \"./DomUtils\";\n\ninterface iProps {\n    objKey: string;\n    jsonObj: any;\n    jsonStats: Stats;\n}\n\nexport class HoverStats extends React.Component<iProps> {\n    render() {\n        const { jsonStats, objKey } = this.props;\n        const nbKey = jsonStats.keys[objKey];\n        const sizeKey = jsonStats.keys[objKey] * objKey.length;\n        const distinctValues = this.props.jsonStats.distinctValue(\n            this.props.objKey\n        );\n        const valueSize = distinctValues.reduce((acu, current) => {\n            return current.size + acu;\n        }, 0);\n        return (\n            <div>\n                <h2>Stats for '{objKey}'</h2>\n                <ul>\n                    <li>The Key is found {nbKey} times in document</li>\n                    <li>\n                        The weight of the key itself is {thousands(sizeKey)} (\n                        {jsonStats.perc(sizeKey)}\n                        %)\n                    </li>\n                    <li>\n                        The total size of all the keys and values{\" \"}\n                        {thousands(valueSize)} ({jsonStats.perc(valueSize)}\n                        %)\n                    </li>\n                    <li>\n                        Key has {distinctValues.length} distinct values\n                        {distinctValues.length > 1 && (\n                            <table>\n                                <thead>\n                                    <tr>\n                                        <th>Value</th>\n                                        <th>#</th>\n                                        <th>%</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {[0, 1].map((idx) => {\n                                        const item = distinctValues[idx];\n                                        return (\n                                            <tr key={objKey + \"-\" + idx}>\n                                                <td>\n                                                    {limitLen(item.key, 20)}\n                                                </td>\n                                                <td>{thousands(item.count)}</td>\n                                                <td>{thousands(item.size)}</td>\n                                                <td>\n                                                    {jsonStats.perc(item.size)}\n                                                </td>\n                                            </tr>\n                                        );\n                                    })}\n                                </tbody>\n                            </table>\n                        )}\n                    </li>\n                </ul>\n            </div>\n        );\n    }\n}\n","import * as _ from \"lodash\";\nimport React from \"react\";\nimport { Stats } from \"./JsonSizeExplorer/stats\";\nimport { limitLen } from \"./DomUtils\";\nimport { HoverStats } from \"./HoverStats\";\nimport style from \"./Explorer.module.css\";\n\ntype tToggleCollapsedKey = (path: string[]) => void;\ntype tHoverOn = (key: string) => void;\n\ninterface iProps {\n    jsonObj: IterableObject;\n    jsonStats: Stats;\n}\n\ninterface iState {\n    hoverObjKey: string;\n    expendedKeys: IterableObject;\n}\n\ninterface IterableObject {\n    [s: string]: number | string | boolean | IterableObject;\n}\n\nexport class Explorer extends React.Component<iProps, iState> {\n    constructor(props: iProps) {\n        super(props);\n        this.state = {\n            hoverObjKey: \"\",\n            expendedKeys: {},\n        };\n        this.toggleCollapsedKey = this.toggleCollapsedKey.bind(this);\n        this.hoverOn = this.hoverOn.bind(this);\n    }\n\n    hoverOn(keyName: string) {\n        this.setState({ hoverObjKey: keyName });\n    }\n\n    toggleCollapsedKey(path: string[]) {\n        const copyExpendedKeys = _.clone(this.state.expendedKeys);\n        if (_.has(copyExpendedKeys, path)) {\n            _.unset(copyExpendedKeys, path);\n        } else {\n            _.set(copyExpendedKeys, path, true);\n        }\n\n        this.setState({ expendedKeys: copyExpendedKeys });\n    }\n    render() {\n        return (\n            <div className=\"flex-row\">\n                <h2>Json Explorer</h2>\n                <div className={style.globalContainer}>\n                    <div className={style.listContainer}>\n                        <List\n                            obj={this.props.jsonObj}\n                            stats={this.props.jsonStats}\n                            path={[]}\n                            expendedKeys={this.state.expendedKeys}\n                            toggleCollapsedKey={this.toggleCollapsedKey}\n                            hoverOn={this.hoverOn}\n                        />\n                    </div>\n                    <div>\n                        {this.state.hoverObjKey.length > 0 && (\n                            <HoverStats\n                                jsonObj={this.props.jsonObj}\n                                jsonStats={this.props.jsonStats}\n                                objKey={this.state.hoverObjKey}\n                            />\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\ninterface iListProps {\n    obj: IterableObject;\n    stats: Stats;\n    toggleCollapsedKey: tToggleCollapsedKey;\n    path: string[];\n    expendedKeys: IterableObject;\n    hoverOn: tHoverOn;\n}\n\nclass List extends React.Component<iListProps> {\n    render() {\n        const { obj } = this.props;\n        const keys = Object.keys(obj);\n        keys.sort();\n        return (\n            <ul className={style.list}>\n                {keys.map((key) => {\n                    const pathValue = _.get(\n                        this.props.expendedKeys,\n                        key,\n                        false\n                    );\n                    return (\n                        <ListItem\n                            key={_.uniqueId(key)}\n                            path={this.props.path.concat([key])}\n                            valueFromArray={_.isArray(obj)}\n                            value={obj[key]}\n                            stats={this.props.stats}\n                            toggleCollapsedKey={this.props.toggleCollapsedKey}\n                            isOpen={pathValue !== false}\n                            hoverOn={this.props.hoverOn}\n                            expendedKeys={pathValue !== false ? pathValue : {}}\n                        />\n                    );\n                })}\n            </ul>\n        );\n    }\n}\n\ninterface iListItemProps {\n    readonly value: any;\n    readonly valueFromArray: boolean;\n    readonly stats: Stats;\n    readonly toggleCollapsedKey: tToggleCollapsedKey;\n    readonly path: string[];\n    readonly expendedKeys: any;\n    readonly isOpen: boolean;\n    readonly hoverOn: tHoverOn;\n}\n\ninterface iListItemState {\n    open: boolean;\n}\n\nclass ListItem extends React.Component<iListItemProps, iListItemState> {\n    constructor(props: iListItemProps) {\n        super(props);\n        this.onClick = this.onClick.bind(this);\n        this.onHoverIn = this.onHoverIn.bind(this);\n    }\n    onHoverIn() {\n        this.props.hoverOn(this.props.path[this.props.path.length - 1]);\n    }\n    onClick() {\n        this.props.toggleCollapsedKey(this.props.path);\n    }\n\n    render() {\n        const objKey = this.props.path[this.props.path.length - 1];\n        const { value, stats } = this.props;\n        const valueSize = JSON.stringify({ [objKey]: value }).length - 2;\n        const canOpen = _.isPlainObject(value) || _.isArray(value);\n        const sizePercentage = stats.perc(valueSize);\n        const keyLabel = this.props.valueFromArray\n            ? \"Array Key \" + objKey\n            : objKey;\n        return (\n            <li className={style.item}>\n                <span\n                    onClick={canOpen ? this.onClick : _.noop}\n                    style={{\n                        color: heatMapColorforValue(sizePercentage / 100),\n                    }}\n                    onMouseEnter={this.onHoverIn}\n                >\n                    {sizePercentage}% {keyLabel} <Value value={value} />\n                </span>\n                {this.props.isOpen && (\n                    <List\n                        obj={value}\n                        stats={stats}\n                        path={this.props.path}\n                        toggleCollapsedKey={this.props.toggleCollapsedKey}\n                        expendedKeys={this.props.expendedKeys}\n                        hoverOn={this.props.hoverOn}\n                    />\n                )}\n            </li>\n        );\n    }\n}\n\nfunction heatMapColorforValue(value: number) {\n    var h = (1.0 - value) * 240;\n    return \"hsl(\" + h + \", 100%, 50%)\";\n}\n\nfunction Value(props: { value: any }) {\n    const value = props.value;\n    if (_.isNull(value)) {\n        return <span className={style.null + \" \" + style.value}>null</span>;\n    } else if (_.isNumber(value)) {\n        return <span className={style.num + \" \" + style.value}>{value}</span>;\n    } else if (_.isString(value)) {\n        return (\n            <span className={style.str + \" \" + style.value}>\n                \"{limitLen(value, 25)}\"\n            </span>\n        );\n    } else if (_.isArray(value)) {\n        return (\n            <span className={style.arr + \" \" + style.value}>\n                [{value.length}]\n            </span>\n        );\n    } else if (_.isPlainObject(value)) {\n        return (\n            <span className={style.obj + \" \" + style.value}>\n                {\"{\"}\n                {_.size(value)}\n                {\"}\"}\n            </span>\n        );\n    } else if (_.isBoolean(value)) {\n        return (\n            <span className={style.bool + \" \" + style.value}>\n                {String(value)}\n            </span>\n        );\n    }\n    return <>###</>;\n}\n","import React from \"react\";\n\nimport { ResultSummary } from \"./ResultSummary\";\nimport { ResultTableCount } from \"./ResultTableCount\";\nimport { Explorer } from \"./Explorer\";\nimport { Stats } from \"./JsonSizeExplorer/stats\";\n\ninterface iProps {\n    jsonObj: any;\n    jsonStats: Stats;\n}\n\nexport function ResultsRoot(props: iProps) {\n    return (\n        <div className=\"flex-row\">\n            <ResultSummary jsonStats={props.jsonStats} />\n            <ResultTableCount jsonStats={props.jsonStats} />\n            <Explorer jsonStats={props.jsonStats} jsonObj={props.jsonObj} />\n        </div>\n    );\n}\n","export interface Indexable {\n    [key: string]: any;\n}\n\nconst TOKEN = \"@#@\";\n\nexport class Stats {\n    public readonly totalLength: number;\n    public readonly keyValue: Indexable;\n    public readonly keys: Indexable;\n    public readonly values: Indexable;\n\n    constructor(rawLength: number) {\n        this.totalLength = rawLength;\n        this.keys = {};\n        this.values = {};\n        this.keyValue = {};\n    }\n\n    addKeyValue(key: string, value: any, path: string) {\n        if (!this.keys[key]) {\n            this.keys[key] = 0;\n        }\n        this.keys[key] = this.keys[key] + 1;\n\n        const jsonValue = JSON.stringify(value);\n        const kv = key + TOKEN + jsonValue;\n        if (!this.keyValue[kv]) {\n            this.keyValue[kv] = 0;\n        }\n        this.keyValue[kv] = this.keyValue[kv] + 1;\n\n        if (!this.values[jsonValue]) {\n            this.values[jsonValue] = [];\n        }\n        this.values[jsonValue].push(path);\n    }\n\n    keySortedByCount() {\n        const ks = Object.keys(this.keys);\n        ks.sort((a, b) => {\n            if (this.keys[a] > this.keys[b]) {\n                return 1;\n            } else if (this.keys[a] < this.keys[b]) {\n                return -1;\n            }\n            return 0;\n        });\n        return ks;\n    }\n\n    keySortedBySize() {\n        const ks = Object.keys(this.keys);\n        ks.sort((a, b) => {\n            const aL = this.keys[a] * a.length;\n            const bL = this.keys[b] * b.length;\n            if (aL > bL) {\n                return 1;\n            } else if (aL < bL) {\n                return -1;\n            }\n            return 0;\n        });\n        return ks;\n    }\n\n    valuesSortedByCount() {\n        const ks = Object.keys(this.values);\n        ks.sort((a, b) => {\n            if (this.values[a].length > this.values[b].length) {\n                return 1;\n            } else if (this.values[a].length < this.values[b].length) {\n                return -1;\n            }\n            return 0;\n        });\n        return ks;\n    }\n\n    valuesSortedBySize() {\n        const ks = Object.keys(this.values);\n        ks.sort((a, b) => {\n            const aL = a.length * this.values[a].length;\n            const bL = b.length * this.values[b].length;\n            if (aL > bL) {\n                return 1;\n            } else if (aL < bL) {\n                return -1;\n            }\n            return 0;\n        });\n        return ks;\n    }\n\n    nbOfKey() {\n        return Object.keys(this.keys).reduce((ac, current) => {\n            return ac + this.keys[current];\n        }, 0);\n    }\n\n    /**\n     * Number of char used to store the key\n     * @returns {number}\n     */\n    keySize() {\n        return Object.keys(this.keys).reduce((ac, current) => {\n            return ac + current.length * this.keys[current];\n        }, 0);\n    }\n\n    perc(nb: number) {\n        return Math.floor((nb / this.totalLength) * 1000) / 10;\n    }\n\n    freqDupsValue() {\n        const ks = Object.keys(this.keyValue).filter((el) => {\n            return this.keyValue[el] > 1;\n        });\n        ks.sort((a, b) => {\n            const aL = this.keyValue[a];\n            const bL = this.keyValue[b];\n            if (aL > bL) {\n                return 1;\n            } else if (aL < bL) {\n                return -1;\n            }\n            return 0;\n        });\n        return ks;\n    }\n    biggestDupsValue() {\n        const ks = Object.keys(this.keyValue).filter((el) => {\n            return this.keyValue[el] > 1;\n        });\n        ks.sort((a, b) => {\n            const aL = this.keyValue[a] * a.length;\n            const bL = this.keyValue[b] * b.length;\n            if (aL > bL) {\n                return 1;\n            } else if (aL < bL) {\n                return -1;\n            }\n            return 0;\n        });\n        return ks;\n    }\n\n    distinctValue(key: string) {\n        const distinct = Object.keys(this.keyValue).filter((el) => {\n            return el.substr(0, key.length + TOKEN.length) === key + TOKEN;\n        });\n        distinct.sort((a, b) => {\n            if (this.keyValue[a] > this.keyValue[b]) return -1;\n            if (this.keyValue[a] < this.keyValue[b]) return 1;\n            return 0;\n        });\n        return distinct.map((keyValue) => {\n            return {\n                key: keyValue,\n                count: this.keyValue[keyValue],\n                size: this.keyValue[keyValue] * keyValue.length,\n            };\n        });\n    }\n}\n","import * as _ from \"lodash\";\nimport { Stats, Indexable } from \"./stats\";\n\nfunction _main(obj: Indexable, stats: Stats, path: string) {\n    const keys = Object.keys(obj);\n\n    keys.forEach((key) => {\n        const value = obj[key];\n        stats.addKeyValue(key, value, path);\n        if (_.isPlainObject(value)) {\n            _main(obj[key], stats, path + \".\" + key);\n        } else if (_.isArray(value)) {\n            value.forEach((item, idx) => {\n                if (_.isPlainObject(item))\n                    _main(item, stats, path + \".\" + key + \".\" + idx);\n            });\n        }\n    });\n}\n\nexport default function main(raw: string) {\n    const stat = new Stats(raw.length);\n    _main(JSON.parse(raw), stat, \"\");\n    return stat;\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport { Form } from \"./Form\";\nimport { ResultsRoot } from \"./ResultsRoot\";\nimport JSONSizeExplorer from \"./JsonSizeExplorer/main\";\nimport { Stats } from \"./JsonSizeExplorer/stats\";\n\ninterface iProps {}\n\ninterface iState {\n    rawJsonString: string;\n    jsonObj: any;\n    jsonStats: Stats;\n}\n\nexport class App extends React.Component<iProps, iState> {\n    constructor(propS: iProps) {\n        super(propS);\n        // const testObj = {};\n        const testRawStr = \"\";\n        // const testRawStr = JSON.stringify(testObj);\n        const stat = testRawStr.length\n            ? JSONSizeExplorer(testRawStr)\n            : new Stats(0);\n        this.state = {\n            rawJsonString: testRawStr,\n            // jsonObj: testObj,\n            jsonObj: {},\n            jsonStats: stat,\n        };\n    }\n\n    onSubmit(rawJsonString: string) {\n        const jsonStats = JSONSizeExplorer(rawJsonString);\n        const jsonObj = JSON.parse(rawJsonString);\n        this.setState({ rawJsonString, jsonStats, jsonObj });\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                {this.state.rawJsonString.length === 0 && (\n                    <Form onSubmit={this.onSubmit.bind(this)} />\n                )}\n                {this.state.rawJsonString.length !== 0 && (\n                    <ResultsRoot\n                        jsonObj={this.state.jsonObj}\n                        jsonStats={this.state.jsonStats}\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}