{"version":3,"sources":["components/explorer/style.module.css","components/detailStatistics/style.module.css","components/form/style.module.css","components/form/index.tsx","uiUtils.ts","components/HighLevelStatistic.tsx","components/detailStatistics/index.tsx","components/explorer/HoverStats.tsx","components/explorer/index.tsx","components/ResultsRoot.tsx","json-size-explorer/JsonDocumentStats.ts","json-size-explorer/index.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","globalContainer","listContainer","list","item","value","arr","bool","null","num","obj","str","h2","h3","statsTable","container","cardBody","textArea","Form","_React$Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","handleTextAreaChange","bind","assertThisInitialized","onSubmit","inherits","createClass","key","ev","length","event","target","setState","react_default","a","createElement","className","style","id","cols","rows","onChange","onClick","React","Component","limitLen","input","maxLength","arguments","undefined","substr","numFormator","Intl","NumberFormat","navigator","language","thousands","format","HighLevelStatistic","stats","jsonStats","totalLength","nbOfKey","keys","keySize","perc","DetailStatistics","MostFrequentKeys","HeaviestKeys","MostFrequentValues","HeaviestValues","MostFrequentKVDuplicates","HeaviestKVDuplicates","KeyTable","title","description","dataProvider","keySortedByCount","processor","k","size","keySortedBySize","valuesSortedByCount","values","valuesSortedBySize","freqDupsValue","keyValue","replace","biggestDupsValue","Fragment","role","join","slice","map","buildRow","rowIdx","idx","HoverStats","apply","_this$props","objKey","nbKey","sizeKey","distinctValues","distinctValue","valueSize","reduce","acu","current","count","Explorer","hoverObjKey","expendedKeys","toggleCollapsedKey","hoverOn","keyName","path","copyExpendedKeys","_","explorer_List","jsonObj","HoverStats_HoverStats","List","_this2","sort","pathValue","explorer_ListItem","concat","valueFromArray","isOpen","ListItem","_this3","onHoverIn","JSON","stringify","defineProperty","canOpen","sizePercentage","keyLabel","color","heatMapColorforValue","onMouseEnter","Value","String","ResultsRoot","explorer_Explorer","JsonDocumentStats","rawLength","jsonValue","kv","push","ks","b","aL","bL","_this4","_this5","ac","_this6","nb","Math","floor","_this7","filter","el","_this8","_this9","distinct","main","raw","stat","_main","forEach","addKeyValue","parse","App","propS","JSONSizeExplorer","rawJsonString","form_Form","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.671910be.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"globalContainer\":\"style_globalContainer__3f860\",\"listContainer\":\"style_listContainer__2ZyAL\",\"list\":\"style_list__1a7JZ\",\"item\":\"style_item__26uB8\",\"value\":\"style_value__2yEVq\",\"arr\":\"style_arr__3VlzR\",\"bool\":\"style_bool__3RRZj\",\"null\":\"style_null__56dCV\",\"num\":\"style_num__3O_M_\",\"obj\":\"style_obj__1ADsl\",\"str\":\"style_str__33mv6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"h2\":\"style_h2__2tUgO\",\"h3\":\"style_h3__2dSPI\",\"statsTable\":\"style_statsTable__1Y2DX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"style_container__EIg9J\",\"cardBody\":\"style_cardBody__3QmjJ\",\"textArea\":\"style_textArea__Elur7\"};","import React from \"react\";\nimport style from \"./style.module.css\";\n\ninterface iProps {\n    onSubmit: (data: string) => void;\n}\n\ninterface iState {\n    value: string;\n}\nexport class Form extends React.Component<iProps, iState> {\n    constructor(props: iProps) {\n        super(props);\n        this.state = { value: \"\" };\n        this.handleTextAreaChange = this.handleTextAreaChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    onSubmit(ev: React.MouseEvent) {\n        if (this.state.value.length === 0) {\n            return;\n        }\n        this.props.onSubmit(this.state.value);\n    }\n\n    handleTextAreaChange(event: React.ChangeEvent) {\n        // @ts-ignore\n        const value = event.target.value ? event.target.value : \"\";\n        this.setState({ value });\n    }\n\n    render() {\n        return (\n            <div className={style.container}>\n                <h5 className=\"card-title\">JSON Size Explorer</h5>\n                <p>Understand the structure of your JSON files.</p>\n\n                <textarea\n                    id=\"area\"\n                    cols={60}\n                    rows={10}\n                    value={this.state.value}\n                    onChange={this.handleTextAreaChange}\n                    className={style.textArea}\n                />\n                <br />\n                <button\n                    id=\"sub\"\n                    className=\"btn btn-info btn-sm\"\n                    onClick={this.onSubmit}\n                >\n                    Submit\n                </button>\n            </div>\n        );\n    }\n}\n","export function limitLen(input: string, maxLength = 50) {\n    return input.length > maxLength\n        ? input.substr(0, maxLength) + \"...\"\n        : input;\n}\n\nconst numFormator = new Intl.NumberFormat(navigator.language);\nexport function thousands(input: number) {\n    return numFormator.format(input);\n}\n","import React from \"react\";\nimport { thousands } from \"../uiUtils\";\nimport { JsonDocumentStats } from \"../json-size-explorer/JsonDocumentStats\";\n\ninterface iProps {\n    jsonStats: JsonDocumentStats;\n}\n\nexport function HighLevelStatistic(props: iProps) {\n    const stats = props.jsonStats;\n    return (\n        <div>\n            <h1>Summary</h1>\n            <ul>\n                <li>Total document size: {thousands(stats.totalLength)}</li>\n                <li>Number of keys: {thousands(stats.nbOfKey())}</li>\n                <li>\n                    Number of unique keys:{\" \"}\n                    {thousands(Object.keys(stats.keys).length)}\n                </li>\n                <li>\n                    Key size: {thousands(stats.keySize())} -{\" \"}\n                    {stats.perc(stats.keySize())}%\n                </li>\n            </ul>\n        </div>\n    );\n}\n","import React from \"react\";\nimport { thousands } from \"../../uiUtils\";\nimport { JsonDocumentStats } from \"../../json-size-explorer/JsonDocumentStats\";\nimport style from \"./style.module.css\";\n\ninterface iProps {\n    jsonStats: JsonDocumentStats;\n}\n\ntype tProcessor = (k: string) => (string | number)[];\n\nexport function DetailStatistics(props: iProps) {\n    return (\n        <div>\n            <div>\n                <h2 className={style.h2}>Keys</h2>\n                <MostFrequentKeys jsonStats={props.jsonStats} />\n                <HeaviestKeys jsonStats={props.jsonStats} />\n            </div>\n            <div>\n                <h2 className={style.h2}>Values</h2>\n                <MostFrequentValues jsonStats={props.jsonStats} />\n                <HeaviestValues jsonStats={props.jsonStats} />\n            </div>\n            <div>\n                <div>\n                    <h2 className={style.h2}>Duplicates</h2>\n                    <MostFrequentKVDuplicates jsonStats={props.jsonStats} />\n                    <HeaviestKVDuplicates jsonStats={props.jsonStats} />\n                </div>\n            </div>\n        </div>\n    );\n}\n\nfunction MostFrequentKeys(props: iProps) {\n    const stats = props.jsonStats;\n    function processor(k: string) {\n        const size = k.length * stats.keys[k];\n        return [k, thousands(stats.keys[k]), thousands(size), stats.perc(size)];\n    }\n    return (\n        <KeyTable\n            title=\"Most Frequently used keys\"\n            description=\"List all the keys found in the JSON and order them by how many times they were found.\"\n            dataProvider={stats.keySortedByCount.bind(stats)}\n            processor={processor}\n        />\n    );\n}\n\nfunction HeaviestKeys(props: iProps) {\n    const stats = props.jsonStats;\n    function processor(k: string) {\n        const size = k.length * stats.keys[k];\n        return [k, thousands(stats.keys[k]), thousands(size), stats.perc(size)];\n    }\n    return (\n        <KeyTable\n            title=\"Heaviest keys\"\n            description=\"List all the keys found in the JSON and order them by how many characters are needed to store them.\"\n            dataProvider={stats.keySortedBySize.bind(stats)}\n            processor={processor}\n        />\n    );\n}\n\nfunction MostFrequentValues(props: iProps) {\n    const stats = props.jsonStats;\n    function processor(k: string) {\n        const size = stats.values[k].length * k.length;\n        return [\n            k,\n            thousands(stats.values[k].length),\n            thousands(size),\n            stats.perc(size) + \"%\",\n        ];\n    }\n    return (\n        <KeyTable\n            title=\"Most Frequent Values\"\n            description=\"List all the values found in the JSON and order them by how many we saw them.\"\n            dataProvider={stats.valuesSortedByCount.bind(stats)}\n            processor={processor}\n        />\n    );\n}\n\nfunction HeaviestValues(props: iProps) {\n    const stats = props.jsonStats;\n    function processor(k: string) {\n        const size = stats.values[k].length * k.length;\n        return [\n            k,\n            thousands(stats.values[k].length),\n            thousands(size),\n            stats.perc(size) + \"%\",\n        ];\n    }\n    return (\n        <KeyTable\n            title=\"Heaviest Values\"\n            description=\"List all the values found in the JSON and order them by how many characters are needed to store them.\"\n            dataProvider={stats.valuesSortedBySize.bind(stats)}\n            processor={processor}\n        />\n    );\n}\n\nfunction MostFrequentKVDuplicates(props: iProps) {\n    const stats = props.jsonStats;\n    function processor(k: string) {\n        const size = stats.keyValue[k] * (k.length - 3);\n        return [\n            k.replace(\"@#@\", \" = \"),\n            thousands(stats.keyValue[k]),\n            thousands(size),\n            stats.perc(size) + \"%\",\n        ];\n    }\n    return (\n        <KeyTable\n            title=\"Most Frequent Duplicates\"\n            description=\"List all the tuples Key/Value found in the JSON and order them by how often we saw them.\"\n            dataProvider={stats.freqDupsValue.bind(stats)}\n            processor={processor}\n        />\n    );\n}\n\nfunction HeaviestKVDuplicates(props: iProps) {\n    const stats = props.jsonStats;\n    function processor(k: string) {\n        const size = stats.keyValue[k] * (k.length - 3);\n        return [\n            k.replace(\"@#@\", \" = \"),\n            thousands(stats.keyValue[k]),\n            thousands(size),\n            stats.perc(size) + \"%\",\n        ];\n    }\n    return (\n        <KeyTable\n            title=\"Heaviest Duplicates\"\n            description=\"List all the tuples Key/Value ordered by how many characters are used to store them.\"\n            dataProvider={stats.biggestDupsValue.bind(stats)}\n            processor={processor}\n        />\n    );\n}\n\nfunction KeyTable(props: {\n    title: string;\n    description: string;\n    dataProvider: () => string[];\n    processor: tProcessor;\n}) {\n    return (\n        <>\n            <h3 className={style.h3}>{props.title}</h3>\n            <div className=\"alert alert-secondary\" role=\"alert\">\n                {props.description}\n            </div>\n            <table\n                className={[\n                    \"table\",\n                    \"table-striped\",\n                    \"table-sm\",\n                    \"table-hover\",\n                    style.statsTable,\n                ].join(\" \")}\n            >\n                <thead>\n                    <tr>\n                        <th>Key Name</th>\n                        <th>Count</th>\n                        <th>Size</th>\n                        <th>%</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {drawTableBody(props.dataProvider, props.processor)}\n                </tbody>\n            </table>\n        </>\n    );\n}\n\nfunction drawTableBody(dataProvider: () => string[], processor: tProcessor) {\n    return dataProvider()\n        .slice(-5)\n        .map(processor)\n        .map(buildRow);\n}\n\nfunction buildRow(arr: (string | number)[], rowIdx: number) {\n    return (\n        <tr key={rowIdx}>\n            {arr.map((item, idx) => {\n                return <td key={rowIdx + \"-\" + idx}>{item}</td>;\n            })}\n        </tr>\n    );\n}\n","import React from \"react\";\nimport { JsonDocumentStats } from \"../../json-size-explorer/JsonDocumentStats\";\nimport { limitLen, thousands } from \"../../uiUtils\";\n\ninterface iProps {\n    objKey: string;\n    jsonObj: any;\n    jsonStats: JsonDocumentStats;\n}\n\nexport class HoverStats extends React.Component<iProps> {\n    render() {\n        const { jsonStats, objKey } = this.props;\n        const nbKey = jsonStats.keys[objKey];\n        const sizeKey = jsonStats.keys[objKey] * objKey.length;\n        const distinctValues = this.props.jsonStats.distinctValue(\n            this.props.objKey\n        );\n        const valueSize = distinctValues.reduce((acu, current) => {\n            return current.size + acu;\n        }, 0);\n        return (\n            <div>\n                <h2>Stats for '{objKey}'</h2>\n                <ul>\n                    <li>The Key is found {nbKey} times in document</li>\n                    <li>\n                        The weight of the key itself is {thousands(sizeKey)} (\n                        {jsonStats.perc(sizeKey)}\n                        %)\n                    </li>\n                    <li>\n                        The total size of all the keys and values{\" \"}\n                        {thousands(valueSize)} ({jsonStats.perc(valueSize)}\n                        %)\n                    </li>\n                    <li>\n                        Key has {distinctValues.length} distinct values\n                        {distinctValues.length > 1 && (\n                            <table>\n                                <thead>\n                                    <tr>\n                                        <th>Value</th>\n                                        <th>#</th>\n                                        <th>%</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {[0, 1].map((idx) => {\n                                        const item = distinctValues[idx];\n                                        return (\n                                            <tr key={objKey + \"-\" + idx}>\n                                                <td>\n                                                    {limitLen(item.key, 20)}\n                                                </td>\n                                                <td>{thousands(item.count)}</td>\n                                                <td>{thousands(item.size)}</td>\n                                                <td>\n                                                    {jsonStats.perc(item.size)}\n                                                </td>\n                                            </tr>\n                                        );\n                                    })}\n                                </tbody>\n                            </table>\n                        )}\n                    </li>\n                </ul>\n            </div>\n        );\n    }\n}\n","import * as _ from \"lodash\";\nimport React from \"react\";\nimport { JsonDocumentStats } from \"../../json-size-explorer/JsonDocumentStats\";\nimport { limitLen } from \"../../uiUtils\";\nimport { HoverStats } from \"./HoverStats\";\nimport style from \"./style.module.css\";\n\ntype tToggleCollapsedKey = (path: string[]) => void;\ntype tHoverOn = (key: string) => void;\n\ninterface iProps {\n    jsonObj: IterableObject;\n    jsonStats: JsonDocumentStats;\n}\n\ninterface iState {\n    hoverObjKey: string;\n    expendedKeys: IterableObject;\n}\n\ninterface IterableObject {\n    [s: string]: number | string | boolean | IterableObject;\n}\n\nexport class Explorer extends React.Component<iProps, iState> {\n    constructor(props: iProps) {\n        super(props);\n        this.state = {\n            hoverObjKey: \"\",\n            expendedKeys: {},\n        };\n        this.toggleCollapsedKey = this.toggleCollapsedKey.bind(this);\n        this.hoverOn = this.hoverOn.bind(this);\n    }\n\n    hoverOn(keyName: string) {\n        this.setState({ hoverObjKey: keyName });\n    }\n\n    toggleCollapsedKey(path: string[]) {\n        const copyExpendedKeys = _.clone(this.state.expendedKeys);\n        if (_.has(copyExpendedKeys, path)) {\n            _.unset(copyExpendedKeys, path);\n        } else {\n            _.set(copyExpendedKeys, path, true);\n        }\n\n        this.setState({ expendedKeys: copyExpendedKeys });\n    }\n    render() {\n        return (\n            <div className=\"flex-row\">\n                <h2>Json Explorer</h2>\n                <div className={style.globalContainer}>\n                    <div className={style.listContainer}>\n                        <List\n                            obj={this.props.jsonObj}\n                            stats={this.props.jsonStats}\n                            path={[]}\n                            expendedKeys={this.state.expendedKeys}\n                            toggleCollapsedKey={this.toggleCollapsedKey}\n                            hoverOn={this.hoverOn}\n                        />\n                    </div>\n                    <div>\n                        {this.state.hoverObjKey.length > 0 && (\n                            <HoverStats\n                                jsonObj={this.props.jsonObj}\n                                jsonStats={this.props.jsonStats}\n                                objKey={this.state.hoverObjKey}\n                            />\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\ninterface iListProps {\n    obj: IterableObject;\n    stats: JsonDocumentStats;\n    toggleCollapsedKey: tToggleCollapsedKey;\n    path: string[];\n    expendedKeys: IterableObject;\n    hoverOn: tHoverOn;\n}\n\nclass List extends React.Component<iListProps> {\n    render() {\n        const { obj } = this.props;\n        const keys = Object.keys(obj);\n        keys.sort();\n        return (\n            <ul className={style.list}>\n                {keys.map((key) => {\n                    const pathValue = _.get(\n                        this.props.expendedKeys,\n                        key,\n                        false\n                    );\n                    return (\n                        <ListItem\n                            key={_.uniqueId(key)}\n                            path={this.props.path.concat([key])}\n                            valueFromArray={_.isArray(obj)}\n                            value={obj[key]}\n                            stats={this.props.stats}\n                            toggleCollapsedKey={this.props.toggleCollapsedKey}\n                            isOpen={pathValue !== false}\n                            hoverOn={this.props.hoverOn}\n                            expendedKeys={pathValue !== false ? pathValue : {}}\n                        />\n                    );\n                })}\n            </ul>\n        );\n    }\n}\n\ninterface iListItemProps {\n    readonly value: any;\n    readonly valueFromArray: boolean;\n    readonly stats: JsonDocumentStats;\n    readonly toggleCollapsedKey: tToggleCollapsedKey;\n    readonly path: string[];\n    readonly expendedKeys: any;\n    readonly isOpen: boolean;\n    readonly hoverOn: tHoverOn;\n}\n\ninterface iListItemState {\n    open: boolean;\n}\n\nclass ListItem extends React.Component<iListItemProps, iListItemState> {\n    constructor(props: iListItemProps) {\n        super(props);\n        this.onClick = this.onClick.bind(this);\n        this.onHoverIn = this.onHoverIn.bind(this);\n    }\n    onHoverIn() {\n        this.props.hoverOn(this.props.path[this.props.path.length - 1]);\n    }\n    onClick() {\n        this.props.toggleCollapsedKey(this.props.path);\n    }\n\n    render() {\n        const objKey = this.props.path[this.props.path.length - 1];\n        const { value, stats } = this.props;\n        const valueSize = JSON.stringify({ [objKey]: value }).length - 2;\n        const canOpen = _.isPlainObject(value) || _.isArray(value);\n        const sizePercentage = stats.perc(valueSize);\n        const keyLabel = this.props.valueFromArray\n            ? \"Array Key \" + objKey\n            : objKey;\n        return (\n            <li className={style.item}>\n                <span\n                    onClick={canOpen ? this.onClick : _.noop}\n                    style={{\n                        color: heatMapColorforValue(sizePercentage / 100),\n                    }}\n                    onMouseEnter={this.onHoverIn}\n                >\n                    {sizePercentage}% {keyLabel} <Value value={value} />\n                </span>\n                {this.props.isOpen && (\n                    <List\n                        obj={value}\n                        stats={stats}\n                        path={this.props.path}\n                        toggleCollapsedKey={this.props.toggleCollapsedKey}\n                        expendedKeys={this.props.expendedKeys}\n                        hoverOn={this.props.hoverOn}\n                    />\n                )}\n            </li>\n        );\n    }\n}\n\nfunction heatMapColorforValue(value: number) {\n    var h = (1.0 - value) * 240;\n    return \"hsl(\" + h + \", 100%, 50%)\";\n}\n\nfunction Value(props: { value: any }) {\n    const value = props.value;\n    if (_.isNull(value)) {\n        return <span className={style.null + \" \" + style.value}>null</span>;\n    } else if (_.isNumber(value)) {\n        return <span className={style.num + \" \" + style.value}>{value}</span>;\n    } else if (_.isString(value)) {\n        return (\n            <span className={style.str + \" \" + style.value}>\n                \"{limitLen(value, 25)}\"\n            </span>\n        );\n    } else if (_.isArray(value)) {\n        return (\n            <span className={style.arr + \" \" + style.value}>\n                [{value.length}]\n            </span>\n        );\n    } else if (_.isPlainObject(value)) {\n        return (\n            <span className={style.obj + \" \" + style.value}>\n                {\"{\"}\n                {_.size(value)}\n                {\"}\"}\n            </span>\n        );\n    } else if (_.isBoolean(value)) {\n        return (\n            <span className={style.bool + \" \" + style.value}>\n                {String(value)}\n            </span>\n        );\n    }\n    return <>###</>;\n}\n","import React from \"react\";\n\nimport { HighLevelStatistic } from \"./HighLevelStatistic\";\nimport { DetailStatistics } from \"./detailStatistics\";\nimport { Explorer } from \"./explorer/\";\nimport { JsonDocumentStats } from \"../json-size-explorer/JsonDocumentStats\";\n\ninterface iProps {\n    jsonObj: any;\n    jsonStats: JsonDocumentStats;\n}\n\nexport function ResultsRoot(props: iProps) {\n    return (\n        <div>\n            <HighLevelStatistic jsonStats={props.jsonStats} />\n            <DetailStatistics jsonStats={props.jsonStats} />\n            <Explorer jsonStats={props.jsonStats} jsonObj={props.jsonObj} />\n        </div>\n    );\n}\n","export interface Indexable {\n    [key: string]: any;\n}\n\nconst TOKEN = \"@#@\";\n\nexport class JsonDocumentStats {\n    public readonly totalLength: number;\n    public readonly keyValue: Indexable;\n    public readonly keys: Indexable;\n    public readonly values: Indexable;\n\n    constructor(rawLength: number) {\n        this.totalLength = rawLength;\n        this.keys = {};\n        this.values = {};\n        this.keyValue = {};\n    }\n\n    addKeyValue(key: string, value: any, path: string) {\n        if (!this.keys[key]) {\n            this.keys[key] = 0;\n        }\n        this.keys[key] = this.keys[key] + 1;\n\n        const jsonValue = JSON.stringify(value);\n        const kv = key + TOKEN + jsonValue;\n        if (!this.keyValue[kv]) {\n            this.keyValue[kv] = 0;\n        }\n        this.keyValue[kv] = this.keyValue[kv] + 1;\n\n        if (!this.values[jsonValue]) {\n            this.values[jsonValue] = [];\n        }\n        this.values[jsonValue].push(path);\n    }\n\n    keySortedByCount() {\n        const ks = Object.keys(this.keys);\n        ks.sort((a, b) => {\n            if (this.keys[a] > this.keys[b]) {\n                return 1;\n            } else if (this.keys[a] < this.keys[b]) {\n                return -1;\n            }\n            return 0;\n        });\n        return ks;\n    }\n\n    keySortedBySize() {\n        const ks = Object.keys(this.keys);\n        ks.sort((a, b) => {\n            const aL = this.keys[a] * a.length;\n            const bL = this.keys[b] * b.length;\n            if (aL > bL) {\n                return 1;\n            } else if (aL < bL) {\n                return -1;\n            }\n            return 0;\n        });\n        return ks;\n    }\n\n    valuesSortedByCount() {\n        const ks = Object.keys(this.values);\n        ks.sort((a, b) => {\n            if (this.values[a].length > this.values[b].length) {\n                return 1;\n            } else if (this.values[a].length < this.values[b].length) {\n                return -1;\n            }\n            return 0;\n        });\n        return ks;\n    }\n\n    valuesSortedBySize() {\n        const ks = Object.keys(this.values);\n        ks.sort((a, b) => {\n            const aL = a.length * this.values[a].length;\n            const bL = b.length * this.values[b].length;\n            if (aL > bL) {\n                return 1;\n            } else if (aL < bL) {\n                return -1;\n            }\n            return 0;\n        });\n        return ks;\n    }\n\n    nbOfKey() {\n        return Object.keys(this.keys).reduce((ac, current) => {\n            return ac + this.keys[current];\n        }, 0);\n    }\n\n    /**\n     * Number of char used to store the key\n     * @returns {number}\n     */\n    keySize() {\n        return Object.keys(this.keys).reduce((ac, current) => {\n            return ac + current.length * this.keys[current];\n        }, 0);\n    }\n\n    perc(nb: number) {\n        return Math.floor((nb / this.totalLength) * 1000) / 10;\n    }\n\n    freqDupsValue() {\n        const ks = Object.keys(this.keyValue).filter((el) => {\n            return this.keyValue[el] > 1;\n        });\n        ks.sort((a, b) => {\n            const aL = this.keyValue[a];\n            const bL = this.keyValue[b];\n            if (aL > bL) {\n                return 1;\n            } else if (aL < bL) {\n                return -1;\n            }\n            return 0;\n        });\n        return ks;\n    }\n    biggestDupsValue() {\n        const ks = Object.keys(this.keyValue).filter((el) => {\n            return this.keyValue[el] > 1;\n        });\n        ks.sort((a, b) => {\n            const aL = this.keyValue[a] * a.length;\n            const bL = this.keyValue[b] * b.length;\n            if (aL > bL) {\n                return 1;\n            } else if (aL < bL) {\n                return -1;\n            }\n            return 0;\n        });\n        return ks;\n    }\n\n    distinctValue(key: string) {\n        const distinct = Object.keys(this.keyValue).filter((el) => {\n            return el.substr(0, key.length + TOKEN.length) === key + TOKEN;\n        });\n        distinct.sort((a, b) => {\n            if (this.keyValue[a] > this.keyValue[b]) return -1;\n            if (this.keyValue[a] < this.keyValue[b]) return 1;\n            return 0;\n        });\n        return distinct.map((keyValue) => {\n            return {\n                key: keyValue,\n                count: this.keyValue[keyValue],\n                size: this.keyValue[keyValue] * keyValue.length,\n            };\n        });\n    }\n}\n","import * as _ from \"lodash\";\nimport { JsonDocumentStats, Indexable } from \"./JsonDocumentStats\";\n\nfunction _main(obj: Indexable, stats: JsonDocumentStats, path: string) {\n    const keys = Object.keys(obj);\n\n    keys.forEach((key) => {\n        const value = obj[key];\n        stats.addKeyValue(key, value, path);\n        if (_.isPlainObject(value)) {\n            _main(obj[key], stats, path + \".\" + key);\n        } else if (_.isArray(value)) {\n            value.forEach((item, idx) => {\n                if (_.isPlainObject(item))\n                    _main(item, stats, path + \".\" + key + \".\" + idx);\n            });\n        }\n    });\n}\n\nexport default function main(raw: string) {\n    const stat = new JsonDocumentStats(raw.length);\n    _main(JSON.parse(raw), stat, \"\");\n    return stat;\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport { Form } from \"./components/form\";\nimport { ResultsRoot } from \"./components/ResultsRoot\";\nimport JSONSizeExplorer from \"./json-size-explorer\";\nimport { JsonDocumentStats } from \"./json-size-explorer/JsonDocumentStats\";\n\ninterface iProps {}\n\ninterface iState {\n    rawJsonString: string;\n    jsonObj: any;\n    jsonStats: JsonDocumentStats;\n}\n\nexport class App extends React.Component<iProps, iState> {\n    constructor(propS: iProps) {\n        super(propS);\n        // const testObj = {};\n        const testRawStr = \"\";\n        // const testRawStr = JSON.stringify(testObj);\n        const stat = testRawStr.length\n            ? JSONSizeExplorer(testRawStr)\n            : new JsonDocumentStats(0);\n        this.state = {\n            rawJsonString: testRawStr,\n            // jsonObj: testObj,\n            jsonObj: {},\n            jsonStats: stat,\n        };\n    }\n\n    onSubmit(rawJsonString: string) {\n        const jsonStats = JSONSizeExplorer(rawJsonString);\n        const jsonObj = JSON.parse(rawJsonString);\n        this.setState({ rawJsonString, jsonStats, jsonObj });\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                {this.state.rawJsonString.length === 0 && (\n                    <Form onSubmit={this.onSubmit.bind(this)} />\n                )}\n                {this.state.rawJsonString.length !== 0 && (\n                    <ResultsRoot\n                        jsonObj={this.state.jsonObj}\n                        jsonStats={this.state.jsonStats}\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === \"localhost\" ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === \"[::1]\" ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n        )\n);\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n    if (\"serviceWorker\" in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n            window.location.href\n        );\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener(\"load\", () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        \"This web app is being served cache-first by a service \" +\n                            \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === \"installed\") {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                \"New content is available and will be used when all \" +\n                                    \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log(\"Content is cached for offline use.\");\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            console.error(\"Error during service worker registration:\", error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get(\"content-type\");\n            if (\n                response.status === 404 ||\n                (contentType != null &&\n                    contentType.indexOf(\"javascript\") === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                \"No internet connection found. App is running in offline mode.\"\n            );\n        });\n}\n\nexport function unregister() {\n    if (\"serviceWorker\" in navigator) {\n        navigator.serviceWorker.ready.then((registration) => {\n            registration.unregister();\n        });\n    }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}